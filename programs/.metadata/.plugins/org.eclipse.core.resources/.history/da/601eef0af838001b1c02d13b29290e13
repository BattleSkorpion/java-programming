package blackjakc;

public class Deck {
	
	private String[] cardTypes = {"Ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "King", "Queen", "Jack"}; 
	private String[] suits = {"Hearts", "Diamonds", "Clover", "Spades"}; 
	private String[] deck = new String[52];  // 52 cards in a deck
	
	public Deck () { 
		newDeck(); 
	}
	
	// get methods 
	public String[] getDeckSuits() { 
		return suits;
	}
	
	public String[] getCardTypes() { 
		return cardTypes; 
	}
	
	public String[] getDeck() { 
		return deck; 
	}
	
	public String deal() {
		// 0 to refer to top card of deck
		String card = deck[0]; 
		this.remove(0); 
		return card; 
	}
	
	public int length() { 
		return deck.length; 
	}
	
	public String toString() { 
		String str = ""; 
		for (int i = 0; i < this.length(); i++) { 
			str = String.join(str, deck[i]); 
		}
		return str; 
	}
	
	private void newDeck() { 
		for (int i = 0, index = 0; i < cardTypes.length; i++) { 
			for (int j = 0; j < suits.length; j++, index++) { 
				deck[index] = cardTypes[i] + " of " + suits[j]; 
			}
		}
		//testing
		System.out.println("deck in Deck: " + this.toString()); 
	}
	
	private void remove(int index) { 
		String[] temp = new String[this.length() - 1]; // 1 smaller than deck length, removing one card
		
		for (int i = 0; i < index; i++) { 
			temp[i] = deck[i]; 
		}
		
		// skip index, card being removed from deck 
		
		for (int i = index; i < temp.length; i++) { 
			temp[i] = deck[i + 1]; 
		}
		deck = temp; 
	}
}
